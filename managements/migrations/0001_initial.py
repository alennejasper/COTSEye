# Generated by Django 5.0.4 on 2024-06-21 08:13

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Barangay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barangay_name', models.CharField(help_text='Designates the name of the barangay.', max_length=65, verbose_name='Barangay')),
            ],
            options={
                'verbose_name': 'Barangay',
                'verbose_name_plural': 'Barangays',
                'db_table': 'managements_barangay',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality_name', models.CharField(help_text='Designates the name of the municipality.', max_length=65, verbose_name='Municipality')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
                'db_table': 'managements_municipality',
            },
        ),
        migrations.CreateModel(
            name='StatusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statustype', models.CharField(default='None', help_text='Designates the status type.', max_length=65, null=True, verbose_name='Status Level Type')),
            ],
            options={
                'verbose_name': 'Status Level Type',
                'verbose_name_plural': 'Status Level Type',
                'db_table': 'managements_status_type',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Designates the latitude of the location.', max_digits=27, null=True, verbose_name='Pin Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Designates the longitude of the location.', max_digits=27, null=True, verbose_name='Pin Longitude')),
                ('perimeters', models.TextField(blank=True, help_text='Designates the perimeters of the location.', null=True, verbose_name='Map Perimeters')),
                ('barangay', models.ForeignKey(help_text='Designates the barangay of the location.', on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='managements.barangay', verbose_name='Barangay')),
                ('municipality', models.ForeignKey(help_text='Designates the municipality of the location.', on_delete=django.db.models.deletion.CASCADE, to='managements.municipality', verbose_name='Municipality')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'managements_location',
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Designates the title of the activity.', max_length=150, verbose_name='Title')),
                ('volunteer_amount', models.IntegerField(blank=True, help_text='Designates the amount of the volunteers at the moment the activity took place.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Volunteer Amount')),
                ('caught_amount', models.IntegerField(blank=True, help_text='Designates the amount of the caught Crown-of-Thorns Starfish at the moment the activity took place.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Caught Amount')),
                ('details', models.TextField(help_text='Designates the details of the activity.', max_length=5000, verbose_name='Details')),
                ('hosting_agency', models.CharField(help_text='Designates the name of the hosting agency.', max_length=150, verbose_name='Hosting Agency')),
                ('intervention_photo', models.ImageField(default='interventions/default.png', help_text='Designates the photo of the activity.', upload_to='interventions', verbose_name='Intervention Photo')),
                ('event_date', models.DateField(default=datetime.date.today, help_text='Designates the date of the activity.', verbose_name='Activity Date')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, help_text='Designates the creation date and time of the activity.', verbose_name='Creation Date')),
                ('location', models.ForeignKey(help_text='Designates the foreign key of the Location model.', on_delete=django.db.models.deletion.CASCADE, to='managements.location', verbose_name='Location')),
                ('statustype', models.ForeignKey(blank=True, help_text='Designates the foreign key of the Status Type model.', null=True, on_delete=django.db.models.deletion.CASCADE, to='managements.statustype', verbose_name='Status Type')),
            ],
            options={
                'verbose_name': 'Intervention',
                'verbose_name_plural': 'Interventions',
                'db_table': 'managements_intervention',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting_agency', models.CharField(blank=True, help_text='Designates the name of the hosting agency.', max_length=150, null=True, verbose_name='Hosting Agency')),
                ('title', models.CharField(help_text='Designates the title of the announcement.', max_length=150, verbose_name='Title')),
                ('context', models.TextField(help_text='Designates the context of the announcement.', max_length=5000, verbose_name='Context')),
                ('release_date', models.DateTimeField(default=datetime.datetime.now, help_text='Designates the release date and time of the announcement.', verbose_name='Release Date')),
                ('announcement_photo', models.ImageField(default='announcements/default.png', help_text='Designates the photo of the announcement.', null=True, upload_to='announcements', verbose_name='Announcement Photo')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, help_text='Designates the creation date and time of the announcement.', verbose_name='Creation Date')),
                ('user', models.ForeignKey(help_text='Designates the foreign key of the User model.', on_delete=django.db.models.deletion.CASCADE, to='authentications.user', verbose_name='User')),
                ('location', models.ForeignKey(blank=True, help_text='Designates the foreign key of the Location model.', null=True, on_delete=django.db.models.deletion.CASCADE, to='managements.location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'db_table': 'managements_announcement',
            },
        ),
        migrations.AddField(
            model_name='barangay',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managements.municipality', verbose_name='Municipality'),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caught_overall', models.IntegerField(help_text='Designates the overall amount of the caught Crown-of-Thorns Starfish at the moment.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Caught Overall')),
                ('volunteer_overall', models.IntegerField(blank=True, help_text='Designates the overall amount of the volunteers at the moment the intervention took place.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Volunteer Overall')),
                ('onset_date', models.DateField(default=datetime.datetime.now, help_text='Designates the onset date of the outbreak status.', verbose_name='Onset Date')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, help_text='Designates the creation date and time of the status.', verbose_name='Creation Date')),
                ('intervention', models.ForeignKey(blank=True, help_text='Designates the foreign key of the Intervention model.', null=True, on_delete=django.db.models.deletion.CASCADE, to='managements.intervention', verbose_name='Intervention')),
                ('location', models.ForeignKey(help_text='Designates the foreign key of the Location model.', on_delete=django.db.models.deletion.CASCADE, to='managements.location', verbose_name='Location')),
                ('statustype', models.ForeignKey(help_text='Designates the foreign key of the Status Type model.', on_delete=django.db.models.deletion.CASCADE, to='managements.statustype', verbose_name='Status Type')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuses',
                'db_table': 'managements_status',
            },
        ),
    ]
